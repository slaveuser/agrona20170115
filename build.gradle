/*
 * Copyright 2014 - 2016 Real Logic Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'checkstyle'
apply plugin: 'eclipse'
apply plugin: 'osgi'

defaultTasks 'clean', 'build', 'install'

group = 'org.agrona'
version = '0.9.2-SNAPSHOT'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

ext {
    if (!project.hasProperty('ossrhUsername')) {
        ossrhUsername = ''
    }

    if (!project.hasProperty('ossrhPassword')) {
        ossrhPassword = ''
    }
}

repositories {
    mavenCentral()
    maven {
        url "http://sevntu-checkstyle.github.com/sevntu.checkstyle/maven2"
    }
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

compileJava {
    // Suppress warnings about using Unsafe and sun.misc
    options.compilerArgs << '-XDignore.symbol.file'
    options.fork = true
    options.forkOptions.executable = 'javac'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

def generatedDir = file("${buildDir}/generated-src")
sourceSets {
    generated.java.srcDir generatedDir
}

// Code Generation Configuration
compileGeneratedJava.dependsOn 'generatePrimitiveExpansions'
compileGeneratedJava.classpath += sourceSets.main.runtimeClasspath

task(generatePrimitiveExpansions, type: JavaExec) {
    main = 'org.agrona.generation.PrimitiveExpander'
    classpath = sourceSets.main.runtimeClasspath
    outputs.dir generatedDir
}

dependencies {
    checkstyle 'com.puppycrawl.tools:checkstyle:7.3'
    checkstyle 'com.github.sevntu.checkstyle:sevntu-checks:1.23.0'

    testCompile(
        'org.hamcrest:hamcrest-all:1.3',
        'junit:junit:4.12',
        'org.mockito:mockito-core:2.5.5')
}

checkstyle {
    configFile = new File(rootDir, 'config/checkstyle/checkstyle.xml')
    toolVersion = '7.3'
}

javadoc {
    title = '<h1>Agrona</h1>'
    options.bottom = '<i>Copyright &#169; 2014 - 2016 Real Logic Ltd. All Rights Reserved.</i>'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
    from sourceSets.generated.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

jar {
    from sourceSets.generated.output
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name = 'Agrona'
                packaging = 'pom'
                // optionally artifactId can be defined here
                description = 'High performance primitives and utility library.'
                url = 'https://github.com/real-logic/Agrona'

                scm {
                    connection = 'scm:git:https://github.com/real-logic/Agrona.git'
                    developerConnection = 'scm:git:https://github.com/real-logic/Agrona.git'
                    url = 'https://github.com/real-logic/Agrona.git'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'tmontgomery'
                        name = 'Todd L. Montgomery'
                        email = 'tmont@nard.net'
                        url = 'https://github.com/tmontgomery'
                    }
                    developer {
                        id = 'mjpt777'
                        name = 'Martin Thompson'
                        email = 'mjpt777@gmail.com'
                        url = 'https://github.com/mjpt777'
                    }
                    developer {
                        id = 'RichardWarburton'
                        name = 'Richard Warburton'
                        email = 'richard.warburton@gmail.com'
                        url = 'https://github.com/RichardWarburton'
                    }
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
    distributionType = 'ALL'
}
